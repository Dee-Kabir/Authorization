{"ast":null,"code":"import { API } from '../config';\nimport cookie from 'js-cookie'; // signup\n\nexport const signup = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n}; // signin\n\nexport const sigin = user => {\n  return fetch(`${API}/signin`, {\n    method: 'POST',\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  }).then(response => {\n    return response.json();\n  }).catch(error => console.log(error));\n}; // signout\n\nexport const signout = next => {\n  removeCookie('token');\n  removeLocalStorage('user');\n  return fetch(`${API}/signout`, {\n    method: 'GET'\n  }).then(response => {\n    next();\n    return response.json();\n  }).catch(error => console.log(error));\n}; // set cookie\n\nexport const setCookie = (key, value) => {\n  if (false) {\n    cookie.set(key, value, {\n      expires: 1\n    });\n  }\n}; // remove cookie\n\nexport const removeCookie = key => {\n  if (false) {\n    cookie.remove(key);\n  }\n}; // get cookie\n\nexport const getCookie = key => {\n  if (false) {\n    return cookie.get(key);\n  }\n}; // localstorage set, remove, get\n\nexport const setLocalStorage = (key, value) => {\n  if (false) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n};\nexport const removeLocalStorage = key => {\n  if (false) {\n    localStorage.removeItem(key);\n  }\n}; // authenticate user on signin\n\nexport const authenticate = (data, next) => {\n  setCookie('token', data.token);\n  setLocalStorage('user', data.user);\n  next();\n}; // check authenticated or not\n\nexport const isAuth = () => {\n  if (false) {\n    if (getCookie('token')) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      }\n\n      return false;\n    }\n\n    return false;\n  }\n\n  return false;\n};","map":{"version":3,"sources":["D:/authenticattion/frontend/actions/auth.js"],"names":["API","cookie","signup","user","fetch","method","headers","Accept","body","JSON","stringify","then","response","json","catch","error","console","log","sigin","signout","next","removeCookie","removeLocalStorage","setCookie","key","value","set","expires","remove","getCookie","get","setLocalStorage","localStorage","setItem","removeItem","authenticate","data","token","isAuth","getItem","parse"],"mappings":"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","sourcesContent":["import {API} from '../config'\r\nimport cookie from 'js-cookie'\r\n\r\n// signup\r\nexport const signup = (user) => {\r\n    return fetch(`${API}/signin`,{\r\n        method:'POST',\r\n        headers:{\r\n            Accept:'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    }).then(response => {\r\n        return response.json()\r\n    }).catch(error => console.log(error))\r\n}\r\n\r\n\r\n// signin\r\nexport const sigin = (user) => {\r\n    return fetch(`${API}/signin`,{\r\n        method:'POST',\r\n        headers:{\r\n            Accept:'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(user)\r\n    }).then(response => {\r\n        return response.json()\r\n    }).catch(error => console.log(error))\r\n}\r\n\r\n// signout\r\nexport const signout = (next) => {\r\n    removeCookie('token')\r\n    removeLocalStorage('user')\r\n    return fetch(`${API}/signout`,{\r\n        method:'GET'\r\n    }).then(response => {\r\n        next();\r\n        return response.json()\r\n    }).catch(error => console.log(error))\r\n}\r\n\r\n// set cookie\r\nexport const setCookie = (key,value) => {\r\n    if(process.browser){\r\n        cookie.set(key,value,{\r\n            expires:1\r\n        });\r\n    }\r\n};\r\n\r\n// remove cookie\r\nexport const removeCookie = (key) => {\r\n    if(process.browser){\r\n        cookie.remove(key)\r\n    }\r\n};\r\n\r\n// get cookie\r\nexport const getCookie = key => {\r\n    if(process.browser){\r\n        return cookie.get(key)\r\n    }\r\n};\r\n\r\n// localstorage set, remove, get\r\nexport const setLocalStorage = (key, value) => {\r\n    if(process.browser){\r\n        localStorage.setItem(key, JSON.stringify(value))\r\n    }\r\n};\r\n\r\nexport const removeLocalStorage = (key) => {\r\n    if(process.browser){\r\n        localStorage.removeItem(key)\r\n    }\r\n};\r\n// authenticate user on signin\r\nexport const authenticate = (data, next) => {\r\n    setCookie('token',data.token)\r\n    setLocalStorage('user',data.user);\r\n    next();\r\n};\r\n// check authenticated or not\r\nexport const isAuth = () => {\r\n    if(process.browser){\r\n        if(getCookie('token')){\r\n            if(localStorage.getItem('user')){\r\n                return JSON.parse(localStorage.getItem('user'))\r\n            }\r\n            return false\r\n        }\r\n        return false\r\n    }\r\n    return false\r\n}\r\n"]},"metadata":{},"sourceType":"module"}